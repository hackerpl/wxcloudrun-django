[2025-04-23 17:33:05,055] [autoreload.py:668] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 17:37:32,412] [autoreload.py:668] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 17:38:07,537] [autoreload.py:668] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 17:42:14,783] [autoreload.py:668] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 20:14:58,801] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:27:56,510] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:29:26,588] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:30:26,330] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:40:48,910] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:41:09,338] [basehttp.py:213] [basehttp:log_message] [INFO]- "GET / HTTP/1.1" 200 10199
[2025-04-23 21:41:11,304] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 31, in counter
    rsp = get_count()
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 47, in get_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:11,311] [basehttp.py:213] [basehttp:log_message] [ERROR]- "GET /api/count HTTP/1.1" 500 204054
[2025-04-23 21:41:13,372] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:13,783] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:13,787] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:14,163] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:14,457] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:14,543] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:14,547] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:14,728] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:14,878] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:14,884] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:14,987] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:15,127] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:15,131] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:15,417] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:15,424] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:15,717] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:15,969] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:16,094] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:16,099] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:16,360] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:16,364] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:41:21,763] [views.py:62] [views:update_count] [INFO]- update_count req: b'{"action":"inc"}'
[2025-04-23 21:41:22,173] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 33, in counter
    rsp = update_count(request)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 73, in update_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:41:22,179] [basehttp.py:213] [basehttp:log_message] [ERROR]- "POST /api/count HTTP/1.1" 500 205443
[2025-04-23 21:59:14,716] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
[2025-04-23 21:59:21,636] [basehttp.py:213] [basehttp:log_message] [INFO]- "GET /?ide_webview_request_time=1745416761307 HTTP/1.1" 200 10199
[2025-04-23 21:59:23,981] [log.py:248] [log:log_response] [ERROR]- Internal Server Error: /api/count
Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\path\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 31, in counter
    rsp = get_count()
  File "E:\WebProject\ff_travel\wxcloudrun-django\wxcloudrun\views.py", line 47, in get_count
    data = Counters.objects.get(id=1)
  File "D:\path\Python313\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 629, in get
    num = len(clone)
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 366, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 1935, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "D:\path\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1622, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\path\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\django\db\backends\mysql\base.py", line 76, in execute
    return self.cursor.execute(query, args)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "D:\path\Python313\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
    ~~~~~~~~~~^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
    ~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
  File "D:\path\Python313\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\path\Python313\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "D:\path\Python313\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
django.db.utils.ProgrammingError: (1146, "Table 'django_demo.Counters' doesn't exist")
[2025-04-23 21:59:23,990] [basehttp.py:213] [basehttp:log_message] [ERROR]- "GET /api/count HTTP/1.1" 500 203588
[2025-04-23 21:59:58,565] [log.py:248] [log:log_response] [WARNING]- Not Found: /api/trips/
[2025-04-23 21:59:58,566] [basehttp.py:213] [basehttp:log_message] [WARNING]- "GET /api/trips/ HTTP/1.1" 404 4351
[2025-04-23 21:59:59,109] [log.py:248] [log:log_response] [WARNING]- Not Found: /favicon.ico
[2025-04-23 21:59:59,110] [basehttp.py:213] [basehttp:log_message] [WARNING]- "GET /favicon.ico HTTP/1.1" 404 2834
[2025-04-23 22:57:10,302] [log.py:248] [log:log_response] [WARNING]- Unauthorized: /api/trips/create
[2025-04-23 22:57:10,303] [basehttp.py:213] [basehttp:log_message] [WARNING]- "GET /api/trips/create HTTP/1.1" 401 58
[2025-04-23 23:06:24,750] [autoreload.py:667] [autoreload:run_with_reloader] [INFO]- Watching for file changes with StatReloader
